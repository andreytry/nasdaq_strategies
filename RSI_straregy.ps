//@version=5
strategy("MACD and RSI Strategy with Trailing Stop-Loss and EMA20 Slope Angle Display", overlay=true)

// MACD calculations
[macdLine, signalLine, _] = ta.macd(close, 12, 26, 9)

// RSI calculation
rsi = ta.rsi(close, 14)

// EMA calculations with custom RGB colors
ema50 = ta.ema(close, 50)  // Replace EMA40 with EMA50
ema20 = ta.ema(close, 20)
ema200 = ta.ema(close, 200)

// Define custom colors with RGB values
colorCyan = color.new(#00FFFF, 0)  // Cyan color for EMA50
colorPink = color.new(#FFC0CB, 0)  // Pink color for EMA20
colorYellow = color.new(#FFFF00, 0) // Yellow color for EMA200

// Plot the EMAs with custom colors
plot(ema50, color=colorCyan, linewidth=2, title="EMA 50")
plot(ema20, color=colorPink, linewidth=2, title="EMA 20")
plot(ema200, color=colorYellow, linewidth=2, title="EMA 200")

// Trailing Stop-Loss Constants
var float initialOffset = 160.0  // Initial offset for stop-loss (160 points)
var float trailingOffset = 320.0  // Trailing offset for stop-loss (320 points)

// Define the threshold for price change alerts
var float priceChangeThreshold = 40.0  // Threshold for triggering price change alerts

// Track RSI oversold and overbought conditions
rsi = ta.rsi(close, 14)
rsiOversold = rsi < 30
rsiOverbought = rsi > 70

// Track RSI oversold and overbought within the last 10 candles
rsiOversoldRecent = ta.lowest(rsi, 10) < 35
rsiOverboughtRecent = ta.highest(rsi, 10) > 65

// Check if RSI "low" or "high" labels have already been placed in the last 5 candles
var int lastRSILowLabel = na
var int lastRSIHighLabel = na

// Detect changes in MACD slope
macdSlopeChangePositive = (macdLine[1] < macdLine[2]) and (macdLine > macdLine[1])  // MACD slope turns positive
macdSlopeChangeNegative = (macdLine[1] > macdLine[2]) and (macdLine < macdLine[1])  // MACD slope turns negative

// Detect MACD crossovers
macdCrossOver = ta.crossover(macdLine, signalLine)
macdCrossUnder = ta.crossunder(macdLine, signalLine)

// Calculate EMA20 slope angle in degrees
slope = ema20 - ema20[1]
angle = math.atan(slope) * (180 / math.pi)

// Plot green lower triangle for positive MACD slope change (bullish)
plotshape(series=macdSlopeChangePositive, location=location.belowbar, color=color.green, style=shape.triangleup, size=size.small, title="MACD Slope Positive")

// Plot red upper triangle for negative MACD slope change (bearish)
plotshape(series=macdSlopeChangeNegative, location=location.abovebar, color=color.red, style=shape.triangledown, size=size.small, title="MACD Slope Negative")

// Plot green lower triangle for MACD crossover (bullish)
plotshape(series=macdCrossOver, location=location.belowbar, color=color.green, style=shape.triangleup, size=size.small, title="MACD Crossover")

// Plot red upper triangle for MACD crossunder (bearish)
plotshape(series=macdCrossUnder, location=location.abovebar, color=color.red, style=shape.triangledown, size=size.small, title="MACD Crossunder")

// Add label near each MACD change triangle showing EMA20 slope angle
if (macdSlopeChangePositive or macdCrossOver)
    label.new(bar_index, low - 15, text="Angle: " + str.tostring(angle, "#.00") + "°", color=color.green, textcolor=color.white, size=size.small)  // For MACD up signals

if (macdSlopeChangeNegative or macdCrossUnder)
    label.new(bar_index, high + 15, text="Angle: " + str.tostring(angle, "#.00") + "°", color=color.red, textcolor=color.white, size=size.small)  // For MACD down signals

// Buy condition: MACD slope turns positive and RSI was oversold within the last 10 candles
longCondition = macdSlopeChangePositive and rsiOversoldRecent
if (longCondition)
    strategy.entry("Buy", strategy.long)
    label.new(bar_index, low - 20, text="B", color=color.green, textcolor=color.white, size=size.normal, style=label.style_label_down)  // Positioned 20 points below the low with label down style for Buy
    alert("BUY ENTRY TRIGGERED", alert.freq_once_per_bar)  // Buy notification in UPPER CASE

// Sell condition: MACD slope turns negative and RSI was overbought within the last 10 candles
shortCondition = macdSlopeChangeNegative and rsiOverboughtRecent
if (shortCondition)
    strategy.entry("Sell", strategy.short)
    label.new(bar_index, high + 20, text="S", color=color.red, textcolor=color.white, size=size.normal)  // Positioned 20 points above the high for Sell
    alert("SELL ENTRY TRIGGERED", alert.freq_once_per_bar)  // Sell notification in UPPER CASE

// Implement Trailing Stop-Loss for Long and Short Positions
strategy.exit("Exit Buy", "Buy", trail_offset=trailingOffset, trail_points=initialOffset)
strategy.exit("Exit Sell", "Sell", trail_offset=trailingOffset, trail_points=initialOffset)

// Move RSI notifications 40 points below the price for oversold and 40 points above for overbought
if (rsiOversold and (na(lastRSILowLabel) or (bar_index - lastRSILowLabel > 5)))
    label.new(bar_index, low - 40, text="RSI", color=color.blue, textcolor=color.white, size=size.normal, style=label.style_label_down)  // Positioned 40 points below the low for RSI oversold with label down style
    lastRSILowLabel := bar_index

if (rsiOverbought and (na(lastRSIHighLabel) or (bar_index - lastRSIHighLabel > 5)))
    label.new(bar_index, high + 40, text="RSI", color=color.orange, textcolor=color.white, size=size.normal)  // Positioned 40 points above the high for RSI overbought
    lastRSIHighLabel := bar_index

// Calculate price change between open price and current close
price_change = close - open

// Display price change label strictly 20 points above the candle for downtrend or 20 points below for uptrend
if (math.abs(price_change) > priceChangeThreshold) 
    labelYPosition = (price_change < 0) ? (high + 20) : (low - 20)  // 20 points above the high for downtrend, 20 points below the low for uptrend
    label.new(bar_index, labelYPosition, text="P" + str.tostring(price_change), color=color.yellow, textcolor=color.black, style=label.style_label_down, size=size.normal)
    alert("PRICE MOVED BY " + str.tostring(price_change) + " POINTS BETWEEN OPEN AND CURRENT PRICE", alert.freq_once_per_bar)  // Price change notification in UPPER CASE

// Notify on positive MACD slope change
if (macdSlopeChangePositive)
    alert("MACD SLOPE CHANGED UP", alert.freq_once_per_bar)

// Notify on negative MACD slope change
if (macdSlopeChangeNegative)
    alert("MACD SLOPE CHANGED DOWN", alert.freq_once_per_bar)

// Notify on MACD crossover
if (macdCrossOver)
    alert("MACD CROSSOVER", alert.freq_once_per_bar)

// Notify on MACD crossunder
if (macdCrossUnder)
    alert("MACD CROSSUNDER", alert.freq_once_per_bar)
