//@version=5
strategy("MACD and RSI Strategy with Trailing Stop-Loss and Price Change Alert", overlay=true)

// MACD calculations
[macdLine, signalLine, _] = ta.macd(close, 12, 26, 9)

// RSI calculation
rsi = ta.rsi(close, 14)

// EMA calculations with custom RGB colors
ema50 = ta.ema(close, 50)
ema20 = ta.ema(close, 20)
ema200 = ta.ema(close, 200)

// Define custom colors with RGB values
colorCyan   = color.new(#00FFFF, 0)   // Cyan color for EMA50
colorPink   = color.new(#FFC0CB, 0)   // Pink color for EMA20
colorYellow = color.new(#FFFF00, 0)   // Yellow color for EMA200
colorOrange = color.new(#FFA500, 0)   // Orange color for RSI labels 
colorPurple = color.new(#800080, 0)   // Purple color for EMA50 horizontal markers

// Plot the EMAs with custom colors
plot(ema50, color=colorCyan, linewidth=2, title="EMA 50")
plot(ema20, color=colorPink, linewidth=2, title="EMA 20")
plot(ema200, color=colorYellow, linewidth=2, title="EMA 200")

// Trailing Stop-Loss Constants
var float initialOffset  = 160.0  // Initial offset for stop-loss (160 points)
var float trailingOffset = 320.0  // Trailing offset for stop-loss (320 points)

// Define the threshold for price change alerts
var float priceChangeThreshold = 200.0  // Threshold for triggering price change alerts

// Define a constant for the number of candles to look back for RSI oversold and overbought
RSIPeriod = 10

// Track RSI oversold and overbought conditions
rsiOversold   = rsi < 30
rsiOverbought = rsi > 70

// Track RSI oversold and overbought within the last RSIPeriod candles
rsiOversoldRecent   = ta.lowest(rsi, RSIPeriod) < 35
rsiOverboughtRecent = ta.highest(rsi, RSIPeriod) > 65

// Check if RSI "low" or "high" labels have already been placed in the last RSIPeriod candles
var int lastRSILowLabel  = na
var int lastRSIHighLabel = na

// Detect changes in MACD slope
macdSlopeChangePositive = (macdLine[1] < macdLine[2]) and (macdLine > macdLine[1])   // MACD slope turns positive
macdSlopeChangeNegative = (macdLine[1] > macdLine[2]) and (macdLine < macdLine[1])   // MACD slope turns negative

// Detect MACD crossovers
macdCrossOver  = ta.crossover(macdLine, signalLine)
macdCrossUnder = ta.crossunder(macdLine, signalLine)

// Plot green lower triangle for positive MACD slope change (bullish)
plotshape(macdSlopeChangePositive, location=location.belowbar, color=color.green, style=shape.triangleup, size=size.small, title="MACD Slope Positive")

// Plot red upper triangle for negative MACD slope change (bearish)
plotshape(macdSlopeChangeNegative, location=location.abovebar, color=color.red, style=shape.triangledown, size=size.small, title="MACD Slope Negative")

// Plot green lower triangle for MACD crossover (bullish)
plotshape(macdCrossOver, location=location.belowbar, color=color.green, style=shape.triangleup, size=size.small, title="MACD Crossover")

// Plot red upper triangle for MACD crossunder (bearish)
plotshape(macdCrossUnder, location=location.abovebar, color=color.red, style=shape.triangledown, size=size.small, title="MACD Crossunder")

// --- Code for Calculating EMA50 Angle ---
anglePeriod = 3  // Number of bars over which to calculate the angle

// Calculate the change in EMA50 over 'anglePeriod' bars
deltaEMA50 = ema50 - ema50[anglePeriod]

// Calculate the slope of EMA50
slopeEMA50 = deltaEMA50 / anglePeriod

// Calculate the angle in degrees
angleEMA50 = math.atan(slopeEMA50) * (180 / math.pi)

// Detect when EMA50 is horizontal (angle between -15 and 15 degrees)
isHorizontalEMA50 = (angleEMA50 > -15) and (angleEMA50 < 15)

// Mark the places on the chart where EMA50 is horizontal
plot(isHorizontalEMA50 ? ema50 : na, title="EMA50 Horizontal", style=plot.style_circles, color=colorPurple, linewidth=2)

// --- Variables to Track Last Buy/Sell Signal ---
var int lastBuySellSignalBar = na
var float lastBuySellLabelY  = na   // Variable to store the y-coordinate of the last Buy/Sell label
var bool lastSignalWasBuy    = false  // Variable to track if last signal was Buy or Sell

// Store Previous Values
prevLastBuySellSignalBar = lastBuySellSignalBar[1]
prevLastBuySellLabelY    = lastBuySellLabelY[1]
prevLastSignalWasBuy     = lastSignalWasBuy[1]

// --- Check for Buy/Sell Conditions and Create Labels ---
// Buy condition: MACD slope turns positive and RSI was oversold within the last RSIPeriod candles
if macdSlopeChangePositive and rsiOversoldRecent
    strategy.entry("Buy", strategy.long)
    // Compute label y-coordinate
    buyLabelY = low - 20
    // Display 'B' in the label below the bar
    label.new(bar_index, buyLabelY, text="B", color=color.green, textcolor=color.white, size=size.normal, style=label.style_label_up)
    alert("BUY ENTRY TRIGGERED", alert.freq_once_per_bar)
    // Update last Buy/Sell signal bar index and label y-coordinate
    lastBuySellSignalBar := bar_index
    lastBuySellLabelY    := buyLabelY
    lastSignalWasBuy     := true

// Sell condition: MACD slope turns negative and RSI was overbought within the last RSIPeriod candles
if macdSlopeChangeNegative and rsiOverboughtRecent
    strategy.entry("Sell", strategy.short)
    // Compute label y-coordinate
    sellLabelY = high + 20
    // Display 'S' in the label above the bar
    label.new(bar_index, sellLabelY, text="S", color=color.red, textcolor=color.white, size=size.normal, style=label.style_label_down)
    alert("SELL ENTRY TRIGGERED", alert.freq_once_per_bar)
    // Update last Buy/Sell signal bar index and label y-coordinate
    lastBuySellSignalBar := bar_index
    lastBuySellLabelY    := sellLabelY
    lastSignalWasBuy     := false

// Implement Trailing Stop-Loss for Long and Short Positions
strategy.exit("Exit Buy",  from_entry="Buy",  trail_offset=trailingOffset, trail_points=initialOffset)
strategy.exit("Exit Sell", from_entry="Sell", trail_offset=trailingOffset, trail_points=initialOffset)

// RSI label positions with alerts for oversold/overbought
if rsiOversold and (na(lastRSILowLabel) or (bar_index - lastRSILowLabel > RSIPeriod))
    label.new(bar_index, low - 25, text="RSI", color=colorOrange, textcolor=color.white, size=size.normal, style=label.style_label_up)
    lastRSILowLabel := bar_index
    alert("RSI OVERSOLD", alert.freq_once_per_bar)

if rsiOverbought and (na(lastRSIHighLabel) or (bar_index - lastRSIHighLabel > RSIPeriod))
    label.new(bar_index, high + 25, text="RSI", color=colorOrange, textcolor=color.white, size=size.normal, style=label.style_label_down)
    lastRSIHighLabel := bar_index
    alert("RSI OVERBOUGHT", alert.freq_once_per_bar)

// Calculate price change between open price and current close
price_change = close - open

// Display price change label strictly 20 points above the candle for downtrend or 20 points below for uptrend
if math.abs(price_change) > priceChangeThreshold
    labelYPosition = price_change < 0 ? (high + 20) : (low - 20)
    label.new(bar_index, labelYPosition, text="P" + str.tostring(price_change), color=colorYellow, textcolor=color.black, style=label.style_label_down, size=size.normal)
    alert("PRICE MOVED BY " + str.tostring(price_change) + " POINTS BETWEEN OPEN AND CURRENT PRICE", alert.freq_once_per_bar)
